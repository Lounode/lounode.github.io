{"meta":{"title":"Lounode's Blog","subtitle":null,"description":null,"author":"Lounode","url":"http://blog.lounode.com","root":"/"},"pages":[],"posts":[{"title":"线段树","slug":"segmenttree","date":"2019-11-10T14:56:16.000Z","updated":"2019-11-11T03:41:23.924Z","comments":true,"path":"2019/11/10/segmenttree/","link":"","permalink":"http://blog.lounode.com/2019/11/10/segmenttree/","excerpt":"","text":"假设有这么一些问题： 这些问题都可以抽象成若干个区间操作，那么问题来了，如何处理这些操作呢？ 首先我们考虑一下朴素做法，每次操作时，用 \\text{for} 循环每次从操作区间的左端点循环到右端点，在这个过程中维护一些信息，查询同理。 但很快我们就发现，这种方法实在是过于低效了，假如每次操作都是从区间的开头循环到结尾，那么这样的时间复杂度就是 O(n^2) 的，对于一些查询次数在 10^5 以内的操作就会 \\text{TLE} 。 应该如何去优化算法，使它能处理一些区间的问题呢？ 先来想想朴素的做法为何很慢？因为它对于每个操作，都去进行了一遍更新，考虑之前接触过的记忆化搜索、递推等，我们想到：是否能在一次操作中用一些方式 存下 这些信息，然后用到的时候再朴素的求呢？ 答案是可行的，想想我们之前学过的前缀和与差分，其核心思想就是这样。 比如现在让你求这个序列某一段区间的和，我们可以考虑对这个序列做一个前缀和。 但是这样做的话是不支持修改的，如果需要修改的话每次都要重新对序列求一个前缀和，它又退化到了 O(n^2) 查询次数一多还是会 \\text{TLE} 。","categories":[],"tags":[{"name":"线段树","slug":"线段树","permalink":"http://blog.lounode.com/tags/线段树/"}]},{"title":"「题解」 Luogu P5613 [MtOI2019]黑蚊子多","slug":"luogup5613","date":"2019-11-10T11:52:25.000Z","updated":"2019-11-10T15:30:22.793Z","comments":true,"path":"2019/11/10/luogup5613/","link":"","permalink":"http://blog.lounode.com/2019/11/10/luogup5613/","excerpt":"","text":"真人面对面收割，美女角色在线掉分，发狂玩蛇新天地。 ---Arcaea中文维基 以下是正文 可以考虑这么一张图： 每次向上走 m 格，在其中有 k 个特殊平台，踩上去后后面每次向上走 m+1 格。 对于 60% 的数据，k = 0。 那么要从底部到达顶部所需要的最小次数就是 \\frac{n}{m} 次，只需要输出 \\frac{n}{m} 即可得到此部分的分数。 对于 100% 的数据，1 ≤ m ≤ n ≤ 1000 ，k ≤ 10 。 1≤ n ≤ 1000 所以我们可以开一个数组存储哪些是特殊平台 ，然后模拟就好了。 12345678910111213141516171819202122232425262728#include &lt;bits/stdc++.h&gt;using namespace std;int main () &#123; int n,m,k; int a[1010]; cin &gt;&gt; n &gt;&gt; m &gt;&gt; k; for(int i = 1; i &lt;= k; i++) &#123; int in; cin&gt;&gt;in; a[in]=1;//存储特殊格子 &#125; int ans=0; int t=0;//当前位置 while (true) &#123; if(n-m&lt;=0) &#123;//边界 ans++;//即使剩余格子小于m 也还是需要走一次的 break; &#125; n-=m;//剩余格子 t+=m;//当前位置 m+=a[t];//如果特殊为格子 m+=1 ans++; &#125; cout&lt;&lt;ans; return 0;&#125;","categories":[],"tags":[{"name":"题解","slug":"题解","permalink":"http://blog.lounode.com/tags/题解/"},{"name":"模拟","slug":"模拟","permalink":"http://blog.lounode.com/tags/模拟/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-10-03T16:00:00.000Z","updated":"2019-11-10T15:11:49.849Z","comments":true,"path":"2019/10/04/hello-world/","link":"","permalink":"http://blog.lounode.com/2019/10/04/hello-world/","excerpt":"","text":"第一篇博客吧.QwQ 测试Markdown语法. 顺便放点更新日志： 19.10.4 Blog初步搭建完成，添加了看板娘。 19.10.5 添加了评论系统。 19.11.10 换了主题、Markdown渲染插件。","categories":[{"name":"杂项","slug":"杂项","permalink":"http://blog.lounode.com/categories/杂项/"}],"tags":[{"name":"misc","slug":"misc","permalink":"http://blog.lounode.com/tags/misc/"}]}]}